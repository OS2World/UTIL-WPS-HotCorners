
/*
 * This file was generated by the SOM Compiler.
 * FileName: WPSExtS.ih.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.7
 *     SOM Emitter emitih: 2.42
 */

/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_WPSAgentSam_ih
#define SOM_WPSAgentSam_ih

#pragma checkout(suspend)

#include <WPSExtS.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass WPSAgentSamCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define WPSAgentSam_MaxNoMethods 0

/*
 * Custom Class initialize routine: AgentInit
 */
#pragma linkage(wpsagent_AgentInit, system)

SOMEXTERN void SOMLINK wpsagent_AgentInit(SOMClass *cls);

/*
 * -- Instance data
 */
typedef void WPSAgentSamData;

/*
 * This class introduces no instance data, so no GetData macro is provided
 */

/*
 * Primary Implementation File Support
 */
#if (defined(WPSAgentSam_Class_Source) || defined(SOM_Module_wpsexts_Source))

/*
 * Trace/Debug macro
 */
#ifndef WPSAgentSamMethodDebug
   #define WPSAgentSamMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* WPSAgentSamMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_WPSAgentSamCClassData.parentMtab
#undef SOMInstance
#define SOMInstance WPSAgentSamCClassData.parentMtab

#ifndef M_WPSAgentSam_Class_Source
   #define M_WPSAgentSam_Class_Source
#endif    /* M_WPSAgentSam_Class_Source */

/*
 * Initialize the class data structure
 */
SOMEXTERN struct WPSAgentSamClassDataStructure SOMDLINK WPSAgentSamClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct WPSAgentSamCClassDataStructure SOMDLINK WPSAgentSamCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */


/*
 *  Initializers for class Ids
 */
static char * somCN_WPSAgentSam = "WPSAgentSam";
static char * somPCN_WPSAgentSam_WPObject = "WPObject";

static somId somPCWPSAgentSam[] = {
    &somPCN_WPSAgentSam_WPObject,
};

static somStaticClassInfo WPSAgentSamSCI = {
    4, 0, 0, 0, 0, 0,
    WPSAgentSam_MajorVersion, WPSAgentSam_MinorVersion,
    0, WPSAgentSam_MaxNoMethods, 1,
    &somCN_WPSAgentSam,
    (somId) NULL, 1,
    somPCWPSAgentSam,
    (somClassDataStructure *) &WPSAgentSamClassData,
    (somCClassDataStructure *) &WPSAgentSamCClassData,
    (somStaticMethod_t *) NULL, (somOverrideMethod_t *) NULL,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) wpsagent_AgentInit,
    0, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK WPSAgentSamNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;
    WPObjectNewClass(WPObject_MajorVersion,WPObject_MinorVersion);	/* static reference */
    result = somBuildClass(1,&WPSAgentSamSCI, somtmajorVersion, somtminorVersion);
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_WPSAgentSam_ih */

/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_FFolder_ih
#define SOM_FFolder_ih

#pragma checkout(suspend)

#include <WPSExtS.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass FFolderCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define FFolder_MaxNoMethods 4

/*
 * -- Instance data
 */
typedef struct {
	string filter;
	boolean filtered;
} FFolderData;

/*
 * GetData macro
 */

/*
 * -- This emitter treats Data Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to override this default.
 */
typedef FFolderData* SOMLINK somTP_FFolder_DataThunk(void*);
#ifdef __IBMC__
#pragma linkage(somTP_FFolder_DataThunk, system)
#endif
typedef somTP_FFolder_DataThunk *somTD_FFolder_DataThunk;

#define FFolderGetData(somSelf) \
   (((somTD_FFolder_DataThunk)(FFolderCClassData.instanceDataToken))(somSelf))

/*
 * Instance variable and staticdata access macros
 */
#ifndef NO_VARIABLE_MACROS
#define _filter (somThis->filter)
#define _filtered (somThis->filtered)
#endif

/*
 * Primary Implementation File Support
 */
#if (defined(FFolder_Class_Source) || defined(SOM_Module_wpsexts_Source))

/*
 * Trace/Debug macro
 */
#ifndef FFolderMethodDebug
   #define FFolderMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* FFolderMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_FFolderCClassData.parentMtab
#undef SOMInstance
#define SOMInstance FFolderCClassData.parentMtab

#ifndef M_FFolder_Class_Source
   #define M_FFolder_Class_Source
#endif    /* M_FFolder_Class_Source */

/*
 * Overridden method: wpInitData
 */
#pragma linkage(ffolder_wpInitData, system)
SOM_Scope void  SOMLINK ffolder_wpInitData(FFolder *somSelf);
static char *somMN_FFolderwpInitData = "WPObject::wpInitData";
static somId somId_FFolderwpInitData = &somMN_FFolderwpInitData;
#ifdef somId_wpInitData
#undef somId_wpInitData
#else
#define somId_wpInitData somId_FFolderwpInitData
#endif
static somMethodProc* FFolder_parent_WPFolder_wpInitData_resolved;
#define FFolder_parent_WPFolder_wpInitData(somSelf) \
  ((( somTD_WPObject_wpInitData ) \
    FFolder_parent_WPFolder_wpInitData_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_WPFolder_wpInitData
  #ifdef parent_WPFolder_wpInitData
     #undef parent_WPFolder_wpInitData
     #define SOMGD_pmc_WPFolder_wpInitData 1
  #else
     #define parent_WPFolder_wpInitData FFolder_parent_WPFolder_wpInitData
  #endif /* parent_WPFolder_wpInitData */
#endif /* SOMGD_pmc_WPFolder_wpInitData */
#ifndef parent_wpInitData
     #define parent_wpInitData FFolder_parent_WPFolder_wpInitData
#endif  /* parent_wpInitData */
#define FFolder_parents_wpInitData(somSelf) (\
   FFolder_parent_WPFolder_wpInitData(somSelf))

/*
 * Overridden method: wpViewObject
 */
#pragma linkage(ffolder_wpViewObject, system)
SOM_Scope HWND  SOMLINK ffolder_wpViewObject(FFolder *somSelf,
		HWND hwndCnr,
		ULONG ulView,
		ULONG param);
static char *somMN_FFolderwpViewObject = "WPObject::wpViewObject";
static somId somId_FFolderwpViewObject = &somMN_FFolderwpViewObject;
#ifdef somId_wpViewObject
#undef somId_wpViewObject
#else
#define somId_wpViewObject somId_FFolderwpViewObject
#endif
static somMethodProc* FFolder_parent_WPFolder_wpViewObject_resolved;
#define FFolder_parent_WPFolder_wpViewObject(somSelf,hwndCnr,ulView,param) \
  ((( somTD_WPObject_wpViewObject ) \
    FFolder_parent_WPFolder_wpViewObject_resolved) \
	 (somSelf,hwndCnr,ulView,param))
#ifndef SOMGD_pmc_WPFolder_wpViewObject
  #ifdef parent_WPFolder_wpViewObject
     #undef parent_WPFolder_wpViewObject
     #define SOMGD_pmc_WPFolder_wpViewObject 1
  #else
     #define parent_WPFolder_wpViewObject FFolder_parent_WPFolder_wpViewObject
  #endif /* parent_WPFolder_wpViewObject */
#endif /* SOMGD_pmc_WPFolder_wpViewObject */
#ifndef parent_wpViewObject
     #define parent_wpViewObject FFolder_parent_WPFolder_wpViewObject
#endif  /* parent_wpViewObject */
#define FFolder_parents_wpViewObject(somSelf,hwndCnr,ulView,param) (\
   FFolder_parent_WPFolder_wpViewObject(somSelf,hwndCnr,ulView,param))

/*
 * Overridden method: wpPopulate
 */
#pragma linkage(ffolder_wpPopulate, system)
SOM_Scope BOOL  SOMLINK ffolder_wpPopulate(FFolder *somSelf,
		ULONG ulReserved,
		PSZ pszPath,
		BOOL fFoldersOnly);
static char *somMN_FFolderwpPopulate = "WPFolder::wpPopulate";
static somId somId_FFolderwpPopulate = &somMN_FFolderwpPopulate;
#ifdef somId_wpPopulate
#undef somId_wpPopulate
#else
#define somId_wpPopulate somId_FFolderwpPopulate
#endif
static somMethodProc* FFolder_parent_WPFolder_wpPopulate_resolved;
#define FFolder_parent_WPFolder_wpPopulate(somSelf,ulReserved,pszPath,fFoldersOnly) \
  ((( somTD_WPFolder_wpPopulate ) \
    FFolder_parent_WPFolder_wpPopulate_resolved) \
	 (somSelf,ulReserved,pszPath,fFoldersOnly))
#ifndef SOMGD_pmc_WPFolder_wpPopulate
  #ifdef parent_WPFolder_wpPopulate
     #undef parent_WPFolder_wpPopulate
     #define SOMGD_pmc_WPFolder_wpPopulate 1
  #else
     #define parent_WPFolder_wpPopulate FFolder_parent_WPFolder_wpPopulate
  #endif /* parent_WPFolder_wpPopulate */
#endif /* SOMGD_pmc_WPFolder_wpPopulate */
#ifndef parent_wpPopulate
     #define parent_wpPopulate FFolder_parent_WPFolder_wpPopulate
#endif  /* parent_wpPopulate */
#define FFolder_parents_wpPopulate(somSelf,ulReserved,pszPath,fFoldersOnly) (\
   FFolder_parent_WPFolder_wpPopulate(somSelf,ulReserved,pszPath,fFoldersOnly))

/*
 * Overridden method: wpSetup
 */
#pragma linkage(ffolder_wpSetup, system)
SOM_Scope BOOL  SOMLINK ffolder_wpSetup(FFolder *somSelf,
		PSZ pszSetupString);
static char *somMN_FFolderwpSetup = "WPObject::wpSetup";
static somId somId_FFolderwpSetup = &somMN_FFolderwpSetup;
#ifdef somId_wpSetup
#undef somId_wpSetup
#else
#define somId_wpSetup somId_FFolderwpSetup
#endif
static somMethodProc* FFolder_parent_WPFolder_wpSetup_resolved;
#define FFolder_parent_WPFolder_wpSetup(somSelf,pszSetupString) \
  ((( somTD_WPObject_wpSetup ) \
    FFolder_parent_WPFolder_wpSetup_resolved) \
	 (somSelf,pszSetupString))
#ifndef SOMGD_pmc_WPFolder_wpSetup
  #ifdef parent_WPFolder_wpSetup
     #undef parent_WPFolder_wpSetup
     #define SOMGD_pmc_WPFolder_wpSetup 1
  #else
     #define parent_WPFolder_wpSetup FFolder_parent_WPFolder_wpSetup
  #endif /* parent_WPFolder_wpSetup */
#endif /* SOMGD_pmc_WPFolder_wpSetup */
#ifndef parent_wpSetup
     #define parent_wpSetup FFolder_parent_WPFolder_wpSetup
#endif  /* parent_wpSetup */
#define FFolder_parents_wpSetup(somSelf,pszSetupString) (\
   FFolder_parent_WPFolder_wpSetup(somSelf,pszSetupString))

/*
 * Overridden method: wpDeleteFromObjUseList
 */
#pragma linkage(ffolder_wpDeleteFromObjUseList, system)
SOM_Scope BOOL  SOMLINK ffolder_wpDeleteFromObjUseList(FFolder *somSelf,
		PUSEITEM pUseItem);
static char *somMN_FFolderwpDeleteFromObjUseList = "WPObject::wpDeleteFromObjUseList";
static somId somId_FFolderwpDeleteFromObjUseList = &somMN_FFolderwpDeleteFromObjUseList;
#ifdef somId_wpDeleteFromObjUseList
#undef somId_wpDeleteFromObjUseList
#else
#define somId_wpDeleteFromObjUseList somId_FFolderwpDeleteFromObjUseList
#endif
static somMethodProc* FFolder_parent_WPFolder_wpDeleteFromObjUseList_resolved;
#define FFolder_parent_WPFolder_wpDeleteFromObjUseList(somSelf,pUseItem) \
  ((( somTD_WPObject_wpDeleteFromObjUseList ) \
    FFolder_parent_WPFolder_wpDeleteFromObjUseList_resolved) \
	 (somSelf,pUseItem))
#ifndef SOMGD_pmc_WPFolder_wpDeleteFromObjUseList
  #ifdef parent_WPFolder_wpDeleteFromObjUseList
     #undef parent_WPFolder_wpDeleteFromObjUseList
     #define SOMGD_pmc_WPFolder_wpDeleteFromObjUseList 1
  #else
     #define parent_WPFolder_wpDeleteFromObjUseList FFolder_parent_WPFolder_wpDeleteFromObjUseList
  #endif /* parent_WPFolder_wpDeleteFromObjUseList */
#endif /* SOMGD_pmc_WPFolder_wpDeleteFromObjUseList */
#ifndef parent_wpDeleteFromObjUseList
     #define parent_wpDeleteFromObjUseList FFolder_parent_WPFolder_wpDeleteFromObjUseList
#endif  /* parent_wpDeleteFromObjUseList */
#define FFolder_parents_wpDeleteFromObjUseList(somSelf,pUseItem) (\
   FFolder_parent_WPFolder_wpDeleteFromObjUseList(somSelf,pUseItem))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct FFolderClassDataStructure SOMDLINK FFolderClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct FFolderCClassDataStructure SOMDLINK FFolderCClassData = {(somMethodTabs) NULL};

/*
 * New Method: _get_filter
 */
#pragma linkage(ffolder__get_filter, system)
SOM_Scope string  SOMLINK ffolder__get_filter(FFolder *somSelf, Environment *ev);
#ifndef somMN__get_filter_defined
#define somMN__get_filter_defined
static char *somMN__get_filter = "_get_filter";
static somId somId__get_filter = &somMN__get_filter;
#endif  /* somMN__get_filter_defined */
#ifndef somDS__get_filter_defined
#define somDS__get_filter_defined
static char *somDS__get_filter = "::FFolder::_get_filter";
static somId somDI__get_filter = &somDS__get_filter;
#endif  /* somDS__get_filter_defined */
#define ffolder__get_filter_somApRdDefault

/*
 * New Method: _set_filter
 */
#pragma linkage(ffolder__set_filter, system)
SOM_Scope void  SOMLINK ffolder__set_filter(FFolder *somSelf, Environment *ev,
		string filter);
#ifndef somMN__set_filter_defined
#define somMN__set_filter_defined
static char *somMN__set_filter = "_set_filter";
static somId somId__set_filter = &somMN__set_filter;
#endif  /* somMN__set_filter_defined */
#ifndef somDS__set_filter_defined
#define somDS__set_filter_defined
static char *somDS__set_filter = "::FFolder::_set_filter";
static somId somDI__set_filter = &somDS__set_filter;
#endif  /* somDS__set_filter_defined */
#define ffolder__set_filter_somApRdDefault

/*
 * New Method: _get_filtered
 */
#pragma linkage(ffolder__get_filtered, system)
SOM_Scope boolean  SOMLINK ffolder__get_filtered(FFolder *somSelf, Environment *ev);
#ifndef somMN__get_filtered_defined
#define somMN__get_filtered_defined
static char *somMN__get_filtered = "_get_filtered";
static somId somId__get_filtered = &somMN__get_filtered;
#endif  /* somMN__get_filtered_defined */
#ifndef somDS__get_filtered_defined
#define somDS__get_filtered_defined
static char *somDS__get_filtered = "::FFolder::_get_filtered";
static somId somDI__get_filtered = &somDS__get_filtered;
#endif  /* somDS__get_filtered_defined */

static somMethodInfo ffolder__get_filteredMethodInfo = {10, 8, 0};

static somApRdInfo ffolder__get_filteredStubs = {0, 0, &ffolder__get_filteredMethodInfo};

/*
 * New Method: _set_filtered
 */
#pragma linkage(ffolder__set_filtered, system)
SOM_Scope void  SOMLINK ffolder__set_filtered(FFolder *somSelf, Environment *ev,
		boolean filtered);
#ifndef somMN__set_filtered_defined
#define somMN__set_filtered_defined
static char *somMN__set_filtered = "_set_filtered";
static somId somId__set_filtered = &somMN__set_filtered;
#endif  /* somMN__set_filtered_defined */
#ifndef somDS__set_filtered_defined
#define somDS__set_filtered_defined
static char *somDS__set_filtered = "::FFolder::_set_filtered";
static somId somDI__set_filtered = &somDS__set_filtered;
#endif  /* somDS__set_filtered_defined */
#define ffolder__set_filtered_somApRdDefault

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t FFolderSM[] = {
    {    &FFolderClassData._get_filter,
         &somId__get_filter,
         &somDI__get_filter,
         (somMethodProc *) ffolder__get_filter,
         (somMethodProc *)((void*)-1),
#ifdef ffolder__get_filter_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&ffolder__get_filterStubs) },
#endif
    {    &FFolderClassData._set_filter,
         &somId__set_filter,
         &somDI__set_filter,
         (somMethodProc *) ffolder__set_filter,
         (somMethodProc *)((void*)-1),
#ifdef ffolder__set_filter_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&ffolder__set_filterStubs) },
#endif
    {    &FFolderClassData._get_filtered,
         &somId__get_filtered,
         &somDI__get_filtered,
         (somMethodProc *) ffolder__get_filtered,
         (somMethodProc *)((void*)-1),
#ifdef ffolder__get_filtered_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&ffolder__get_filteredStubs) },
#endif
    {    &FFolderClassData._set_filtered,
         &somId__set_filtered,
         &somDI__set_filtered,
         (somMethodProc *) ffolder__set_filtered,
         (somMethodProc *)((void*)-1),
#ifdef ffolder__set_filtered_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&ffolder__set_filteredStubs) },
#endif
};


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t FFolderOM[] = {
    {    &somId_FFolderwpInitData,
         (somMethodProc *) ffolder_wpInitData    },
    {    &somId_FFolderwpViewObject,
         (somMethodProc *) ffolder_wpViewObject    },
    {    &somId_FFolderwpPopulate,
         (somMethodProc *) ffolder_wpPopulate    },
    {    &somId_FFolderwpSetup,
         (somMethodProc *) ffolder_wpSetup    },
    {    &somId_FFolderwpDeleteFromObjUseList,
         (somMethodProc *) ffolder_wpDeleteFromObjUseList    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_FFolder = "FFolder";
static char * somPCN_FFolder_WPFolder = "WPFolder";

static somId somPCFFolder[] = {
    &somPCN_FFolder_WPFolder,
};

static somStaticClassInfo FFolderSCI = {
    4, 4, 5, 0, 0, 0,
    FFolder_MajorVersion, FFolder_MinorVersion,
    sizeof(FFolderData), FFolder_MaxNoMethods, 1,
    &somCN_FFolder,
    (somId) NULL, 1,
    somPCFFolder,
    (somClassDataStructure *) &FFolderClassData,
    (somCClassDataStructure *) &FFolderCClassData,
    FFolderSM, FFolderOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    4, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    4, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK FFolderNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;
    WPFolderNewClass(WPFolder_MajorVersion,WPFolder_MinorVersion);	/* static reference */
    result = somBuildClass(1,&FFolderSCI, somtmajorVersion, somtminorVersion);
    FFolder_parent_WPFolder_wpDeleteFromObjUseList_resolved = 
	somParentNumResolve(FFolderCClassData.parentMtab, 1, WPObjectClassData.wpDeleteFromObjUseList); 
    FFolder_parent_WPFolder_wpSetup_resolved = 
	somParentNumResolve(FFolderCClassData.parentMtab, 1, WPObjectClassData.wpSetup); 
    FFolder_parent_WPFolder_wpPopulate_resolved = 
	somParentNumResolve(FFolderCClassData.parentMtab, 1, WPFolderClassData.wpPopulate); 
    FFolder_parent_WPFolder_wpViewObject_resolved = 
	somParentNumResolve(FFolderCClassData.parentMtab, 1, WPObjectClassData.wpViewObject); 
    FFolder_parent_WPFolder_wpInitData_resolved = 
	somParentNumResolve(FFolderCClassData.parentMtab, 1, WPObjectClassData.wpInitData); 
    return result;
}

/*
 * Functions for attributes.
 */
SOM_Scope string  SOMLINK ffolder__get_filter(FFolder *somSelf, Environment *ev){
    FFolderData *somThis = FFolderGetData(somSelf);
    FFolderMethodDebug("FFolder","ffolder__get_filter");
    SOM_IgnoreWarning(ev);

    return (somThis->filter);
}
SOM_Scope void  SOMLINK ffolder__set_filter(FFolder *somSelf, Environment *ev,
		string filter){
    FFolderData *somThis = FFolderGetData(somSelf);
    FFolderMethodDebug("FFolder","ffolder__set_filter");
    SOM_IgnoreWarning(ev);

    somThis->filter = filter;
}
SOM_Scope boolean  SOMLINK ffolder__get_filtered(FFolder *somSelf, Environment *ev){
    FFolderData *somThis = FFolderGetData(somSelf);
    FFolderMethodDebug("FFolder","ffolder__get_filtered");
    SOM_IgnoreWarning(ev);

    return (somThis->filtered);
}
SOM_Scope void  SOMLINK ffolder__set_filtered(FFolder *somSelf, Environment *ev,
		boolean filtered){
    FFolderData *somThis = FFolderGetData(somSelf);
    FFolderMethodDebug("FFolder","ffolder__set_filtered");
    SOM_IgnoreWarning(ev);

    somThis->filtered = filtered;
}

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_FFolder_ih */
